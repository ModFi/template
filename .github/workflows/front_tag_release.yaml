on:
  push:
    branches: 
      - develop/**
      - feature*
      - id*
      - dev*
      - dev/**
      - dev  

name: Create Tag & Release After Dev Deploy

jobs:
  build:
    runs-on: ubuntu-latest
            
    steps:
    - uses: actions/checkout@v2.0.0
    
    - name: Turnstyle
      uses: softprops/turnstyle@v1
      with:
         continue-after-seconds: 1500 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                                            
    - name: (GLOBAL) Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'v%Y%m%d%S')"

# Dev Assume role        
    - name: (DEV) Assume role
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.DEV_AWS_ACCOUNT }}:role/Devops-Role
        role-duration-seconds: 3600
        role-session-name: GithubActions-Dev

    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.7'
    - run: npm install
    - run: npm run build
    - run: ls -la dist/modfi-app  
      
    #- name: Yarn Install
      #run: |
        #yarn install
    #- name: Dev Build
      #run: |
        #yarn build
    #- name: Unit Tests
      #run: |
        #yarn test

    - name: Give permissions
      run: |
        chmod +x scripts/*.sh        
    
    - name: Disable Caching and Deploy to the failover s3 bucket
      run: ./scripts/before_cloudfront.sh
      
    - name: Running test
      run: |
        sleep 600     
    
    - name: After the tests enable Caching and replication
      if: failure()
      run: ./scripts/after_cloudfront.sh failure
      
    - name: After the tests enable Caching and Switch the Buckets on Origin Group
      run: ./scripts/after_cloudfront.sh success
    
    - name: Tag snapshot - ${{ steps.date.outputs.date }}
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.date.outputs.date }}

    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.date.outputs.date }}
        release_name: Release ${{ steps.date.outputs.date }}
        body: |
          Deploy-to-Q a
          Deploy-to-Pro d
        draft: false
        prerelease: true

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@master
      env:
        SLACK_CHANNEL: system_alerts_dev
        SLACK_COLOR: '#3278BD'
        SLACK_MESSAGE: '${{github.event.release.body}} Status: OK'
        SLACK_TITLE: Information
        SLACK_USERNAME: Github-CICD
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
